<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalyzeFrameTooltip" xml:space="preserve">
    <value>Click to analyze frame</value>
  </data>
  <data name="CaptureFrame" xml:space="preserve">
    <value>Capture Frame</value>
  </data>
  <data name="CaptureFrameTooltip" xml:space="preserve">
    <value>Click to capture a frame</value>
  </data>
  <data name="ClickToSeeFrameMessage" xml:space="preserve">
    <value>Click to analyze frame {0}</value>
  </data>
  <data name="FrameNumberFormat" xml:space="preserve">
    <value>Frame {0}</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="GpuViewLinkText" xml:space="preserve">
    <value>Open in GpuView</value>
    <comment>Link text to open log in GpuView</comment>
  </data>
  <data name="WpaLinkText" xml:space="preserve">
    <value>Open in WPA</value>
    <comment>Link text to open log in WPA</comment>
  </data>
  <data name="GpuViewLinkTitle" xml:space="preserve">
    <value>Open session data in GpuView tool. It may take a bit of time to unzip and open large logs.</value>
    <comment>Link title to open log in GpuView</comment>
  </data>
  <data name="WpaLinkTitle" xml:space="preserve">
    <value>Open session data in WPA tool. It may take a bit of time to unzip and open large logs.</value>
    <comment>Link title to open log in WPA</comment>
  </data>
  <data name="ProfilingSelectMessageLink" xml:space="preserve">
    <value>view details</value>
    <comment>Link text for message to show gpu details</comment>
  </data>
  <data name="ProfilingSelectMessagePrefix1" xml:space="preserve">
    <value>Select a range of up to three seconds in the timeline above,</value>
    <comment>First line of message to user for showing gpu details (the text continues on the next line)</comment>
  </data>
  <data name="ProfilingSelectMessagePrefix2" xml:space="preserve">
    <value>and then </value>
    <comment>Start of 2nd line of message to user for showing gpu details (notice space at the end)</comment>
  </data>
  <data name="ProfilingSelectMessageSuffix" xml:space="preserve">
    <value> of GPU usage for that range.</value>
    <comment>Last half of message to user for showing gpu details (notice space on front)</comment>
  </data>
  <data name="ProfilingStartProfilingLink" xml:space="preserve">
    <value>Start</value>
    <comment>This is the first part of a sentence. The second part of the sentence is in ProfilingStartProfilingSpan. "Start collecting additional detailed GPU Usage data." The en-US sentence is also in GpuProfilingRuntimeViewScripted.html</comment>
  </data>
  <data name="ProfilingProfilingStarted" xml:space="preserve">
    <value>Profiling Started</value>
  </data>
  <data name="ProfilingAnalysisMemoryError" xml:space="preserve">
    <value>Insufficient memory to complete analysis. GPU usage settings can be configured to start collection later to collect a smaller size file.</value>
  </data>
  <data name="ProfilingAnalysisOtherError" xml:space="preserve">
    <value>GPU usage analysis failed. HRESULT: {0}</value>
  </data>
  <data name="ScreenshotNotAvailable" xml:space="preserve">
    <value>Frame image is not available</value>
  </data>
  <data name="StopToSeeFrameMessage" xml:space="preserve">
    <value>Stop the session to see the frame details</value>
  </data>
  <data name="ProfilingInProgressMessage" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="ProfilingStartProfilingSpan" xml:space="preserve">
    <value> collecting additional detailed GPU Usage data.</value>
    <comment>This is the second part of a sentence. The first part of the sentence is in ProfilingStartProfilingLink. "Start collecting additional detailed GPU Usage data." The en-US sentence is also in GpuProfilingRuntimeViewScripted.html</comment>
  </data>
  <data name="ProfilingStopProfilingLink" xml:space="preserve">
    <value>Stop collection</value>
    <comment>This is the first part of a sentence. The second part of the sentence is in ProfilingStopProfilingSpan. "Stop collection or exit the application to generate a report." The en-US sentence is also in GpuProfilingRuntimeViewScripted.html</comment>
  </data>
  <data name="ProfilingStopProfilingSpan" xml:space="preserve">
    <value> or exit the application to generate a report.</value>
    <comment>This is the second part of a sentence. The first part of the sentence is in ProfilingStopProfilingLink. "Stop collection or exit the application to generate a report." The en-US sentence is also in GpuProfilingRuntimeViewScripted.html</comment>
  </data>
  <data name="ProfilingUserMark" xml:space="preserve">
    <value>Start Profiling</value>
  </data>
  <data name="NumFramesToCaptureLabel" xml:space="preserve">
    <value>Frames to Capture:</value>
  </data>
  <data name="NumFramesToCaptureComboAutomationName" xml:space="preserve">
    <value>Number of frames to capture</value>
  </data>
</root>